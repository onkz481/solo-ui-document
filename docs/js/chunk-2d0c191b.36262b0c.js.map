{"version":3,"sources":["webpack:///./node_modules/prismjs/components/prism-prolog.js"],"names":["Prism","languages","prolog","pattern","greedy"],"mappings":"iGAAAA,MAAMC,UAAUC,OAAS,CAExB,QAAW,CACVC,QAAS,uBACTC,QAAQ,GAGT,OAAU,CACTD,QAAS,4DACTC,QAAQ,GAET,QAAW,6BAEX,SAAY,6BACZ,OAAU,kBAEV,SAAY,iDACZ,YAAe","file":"js/chunk-2d0c191b.36262b0c.js","sourcesContent":["Prism.languages.prolog = {\n\t// Syntax depends on the implementation\n\t'comment': {\n\t\tpattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n\t\tgreedy: true\n\t},\n\t// Depending on the implementation, strings may allow escaped newlines and quote-escape\n\t'string': {\n\t\tpattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n\t\tgreedy: true\n\t},\n\t'builtin': /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n\t// FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n\t'function': /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n\t'number': /\\b\\d+(?:\\.\\d*)?/,\n\t// Custom operators are allowed\n\t'operator': /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n\t'punctuation': /[(){}\\[\\],]/\n};\n"],"sourceRoot":""}